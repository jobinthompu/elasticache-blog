#### ${CC_ENV_NAME} / ${CC_NAME}
# env: ${CC_ACTIVE_ENV}
# cluster: ${CC_ACTIVE_CLUSTER}
# api endpoint: ${CC_API}
# connect path: /etc/kafka/connect-distributed.properties
bootstrap.servers=${CC_BOOTSTRAP}
key.converter=org.apache.kafka.connect.storage.StringConverter
value.converter=io.confluent.connect.avro.AvroConverter
ssl.endpoint.identification.algorithm=https
security.protocol=SASL_SSL
sasl.mechanism=PLAIN
sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${CC_KEY}" password="${CC_SECRET}";
request.timeout.ms=20000
retry.backoff.ms=500
producer.bootstrap.servers=${CC_BOOTSTRAP}
producer.ssl.endpoint.identification.algorithm=https
producer.security.protocol=SASL_SSL
producer.sasl.mechanism=PLAIN
producer.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${CC_KEY}" password="${CC_SECRET}";
producer.request.timeout.ms=20000
producer.retry.backoff.ms=500
consumer.bootstrap.servers=${CC_BOOTSTRAP}
consumer.ssl.endpoint.identification.algorithm=https
consumer.security.protocol=SASL_SSL
consumer.sasl.mechanism=PLAIN
consumer.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="${CC_KEY}" password="${CC_SECRET}";
consumer.request.timeout.ms=20000
consumer.retry.backoff.ms=500
offset.flush.interval.ms=10000
offset.storage.file.filename=/tmp/connect.offsets
group.id=connect-cluster
offset.storage.topic=connect-offsets
offset.storage.replication.factor=3
offset.storage.partitions=3
config.storage.topic=connect-configs
config.storage.replication.factor=3
status.storage.topic=connect-status
status.storage.replication.factor=3
# Schema Registry specific settings
value.converter.basic.auth.credentials.source=USER_INFO
value.converter.schema.registry.basic.auth.user.info=${SR_KEY}:${SR_SECRET}
value.converter.schema.registry.url=${SR_ENDPOINT}
plugin.path=/usr/share/java